
// Dependencies

var MongoClient = require('mongodb').MongoClient;
var debug = require('debug')('my-application');
var async = require('async');

/**
 *
 * @param dbName
 * @returns {{}}
 * @constructor
 */
var MongoHandler = function(dbName, dbPath){

  var handler = {}

  handler.dbName = dbName || 'test';
  handler.dbPath = dbPath || ('mongodb://127.0.0.1:27017/' + dbName);

  /**
   *
   * @param callback
   * @returns {null}
   */
  handler.open = function open(callback){
    return MongoClient.connect(handler.dbPath, function(err, db){
      if(err) throw err;
      if(!db) throw new Error('Could not access database: ', handler.dbPath);
      handler.db = db;
      console.log('Connected to database: ', handler.dbPath);
      return callback(null, handler);
    });
  };

  /**
   *
   * @param collectionName
   * @returns {*|null}
   */
  handler.collection = function collection(collectionName){
    if(!handler.db) throw new Error('Database has to be opened first');
    return handler.db.collection(collectionName)
  };

  /**
   *
   * @param collectionName
   * @param index_init
   * @param callback
   */
  handler.initCollec = function (collectionName, index_init, callback) {

    var collection = handler.collection(collectionName || 'test');

    async.series([
        function remove_data(cb) {
          return collection.remove(cb);
        },
        function remove_index(cb) {
          return collection.dropAllIndexes(cb);
        },
        function set_index(cb) {
          return index_init(collection, callback);
          return collection.ensureIndex({ "username": 1 }, { unique: true }, cb);
        }
      ],
      callback
    );
  };

  return handler;
}


module.exports = MongoHandler